# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetSqlLoginsResult',
    'AwaitableGetSqlLoginsResult',
    'get_sql_logins',
    'get_sql_logins_output',
]

@pulumi.output_type
class GetSqlLoginsResult:
    """
    A collection of values returned by getSqlLogins.
    """
    def __init__(__self__, id=None, logins=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if logins and not isinstance(logins, list):
            raise TypeError("Expected argument 'logins' to be a list")
        pulumi.set(__self__, "logins", logins)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of the resource used only internally by the provider.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def logins(self) -> Sequence['outputs.GetSqlLoginsLoginResult']:
        """
        Set of SQL login objects
        """
        return pulumi.get(self, "logins")


class AwaitableGetSqlLoginsResult(GetSqlLoginsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSqlLoginsResult(
            id=self.id,
            logins=self.logins)


def get_sql_logins(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSqlLoginsResult:
    """
    Obtains information about all SQL logins found in SQL Server instance.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_mssql as mssql

    example = mssql.get_sql_logins()
    pulumi.export("databases", example.logins)
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('mssql:index/getSqlLogins:getSqlLogins', __args__, opts=opts, typ=GetSqlLoginsResult).value

    return AwaitableGetSqlLoginsResult(
        id=pulumi.get(__ret__, 'id'),
        logins=pulumi.get(__ret__, 'logins'))


@_utilities.lift_output_func(get_sql_logins)
def get_sql_logins_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSqlLoginsResult]:
    """
    Obtains information about all SQL logins found in SQL Server instance.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_mssql as mssql

    example = mssql.get_sql_logins()
    pulumi.export("databases", example.logins)
    ```
    """
    ...
