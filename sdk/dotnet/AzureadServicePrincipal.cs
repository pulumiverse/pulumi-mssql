// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Mssql
{
    /// <summary>
    /// Managed database-level user mapped to Azure AD identity (service principal or managed identity).
    /// 
    /// &gt; **Note** When using this resource, Azure SQL server managed identity does not need any [AzureAD role assignments](https://docs.microsoft.com/en-us/azure/azure-sql/database/authentication-aad-service-principal?view=azuresql).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AzureAD = Pulumi.AzureAD;
    /// using Mssql = Pulumi.Mssql;
    /// using Mssql = Pulumiverse.Mssql;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleDatabase = Mssql.GetDatabase.Invoke(new()
    ///     {
    ///         Name = "example",
    ///     });
    /// 
    ///     var exampleServicePrincipal = AzureAD.GetServicePrincipal.Invoke(new()
    ///     {
    ///         DisplayName = "test-application",
    ///     });
    /// 
    ///     var exampleAzureadServicePrincipal = new Mssql.AzureadServicePrincipal("exampleAzureadServicePrincipal", new()
    ///     {
    ///         DatabaseId = exampleDatabase.Apply(getDatabaseResult =&gt; getDatabaseResult.Id),
    ///         ClientId = exampleServicePrincipal.Apply(getServicePrincipalResult =&gt; getServicePrincipalResult.ApplicationId),
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["userId"] = exampleAzureadServicePrincipal.Id,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// import using &lt;db_id&gt;/&lt;user_id&gt; - can be retrieved using `SELECT CONCAT(DB_ID(), '/', principal_id) FROM sys.database_principals WHERE [name] = '&lt;username&gt;'`
    /// 
    /// ```sh
    /// $ pulumi import mssql:index/azureadServicePrincipal:AzureadServicePrincipal example '7/5'
    /// ```
    /// </summary>
    [MssqlResourceType("mssql:index/azureadServicePrincipal:AzureadServicePrincipal")]
    public partial class AzureadServicePrincipal : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Azure AD client_id of the Service Principal. This can be either regular Service Principal or Managed Service Identity.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// ID of database. Can be retrieved using `mssql.Database` or `SELECT DB_ID('&lt;db_name&gt;')`.
        /// </summary>
        [Output("databaseId")]
        public Output<string> DatabaseId { get; private set; } = null!;

        /// <summary>
        /// User name. Cannot be longer than 128 chars.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a AzureadServicePrincipal resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureadServicePrincipal(string name, AzureadServicePrincipalArgs args, CustomResourceOptions? options = null)
            : base("mssql:index/azureadServicePrincipal:AzureadServicePrincipal", name, args ?? new AzureadServicePrincipalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureadServicePrincipal(string name, Input<string> id, AzureadServicePrincipalState? state = null, CustomResourceOptions? options = null)
            : base("mssql:index/azureadServicePrincipal:AzureadServicePrincipal", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-mssql",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureadServicePrincipal resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureadServicePrincipal Get(string name, Input<string> id, AzureadServicePrincipalState? state = null, CustomResourceOptions? options = null)
        {
            return new AzureadServicePrincipal(name, id, state, options);
        }
    }

    public sealed class AzureadServicePrincipalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure AD client_id of the Service Principal. This can be either regular Service Principal or Managed Service Identity.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// ID of database. Can be retrieved using `mssql.Database` or `SELECT DB_ID('&lt;db_name&gt;')`.
        /// </summary>
        [Input("databaseId", required: true)]
        public Input<string> DatabaseId { get; set; } = null!;

        /// <summary>
        /// User name. Cannot be longer than 128 chars.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public AzureadServicePrincipalArgs()
        {
        }
        public static new AzureadServicePrincipalArgs Empty => new AzureadServicePrincipalArgs();
    }

    public sealed class AzureadServicePrincipalState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure AD client_id of the Service Principal. This can be either regular Service Principal or Managed Service Identity.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// ID of database. Can be retrieved using `mssql.Database` or `SELECT DB_ID('&lt;db_name&gt;')`.
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// User name. Cannot be longer than 128 chars.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public AzureadServicePrincipalState()
        {
        }
        public static new AzureadServicePrincipalState Empty => new AzureadServicePrincipalState();
    }
}
