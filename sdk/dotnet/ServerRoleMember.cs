// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Mssql
{
    /// <summary>
    /// Manages server role membership.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Mssql = Pulumi.Mssql;
    /// using Mssql = Pulumiverse.Mssql;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var member = Mssql.GetSqlLogin.Invoke(new()
    ///     {
    ///         Name = "member_login",
    ///     });
    /// 
    ///     var exampleServerRole = new Mssql.ServerRole("exampleServerRole");
    /// 
    ///     var exampleServerRoleMember = new Mssql.ServerRoleMember("exampleServerRoleMember", new()
    ///     {
    ///         RoleId = exampleServerRole.Id,
    ///         MemberId = member.Apply(getSqlLoginResult =&gt; getSqlLoginResult.Id),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// import using &lt;role_id&gt;/&lt;member_id&gt; - can be retrieved using `sys.server_principals` view
    /// 
    /// ```sh
    /// $ pulumi import mssql:index/serverRoleMember:ServerRoleMember example '7/5'
    /// ```
    /// </summary>
    [MssqlResourceType("mssql:index/serverRoleMember:ServerRoleMember")]
    public partial class ServerRoleMember : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the member. Can be retrieved using `mssql.ServerRole` or `mssql.SqlLogin`
        /// </summary>
        [Output("memberId")]
        public Output<string> MemberId { get; private set; } = null!;

        /// <summary>
        /// ID of the server role. Can be retrieved using `mssql.ServerRole`
        /// </summary>
        [Output("roleId")]
        public Output<string> RoleId { get; private set; } = null!;


        /// <summary>
        /// Create a ServerRoleMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerRoleMember(string name, ServerRoleMemberArgs args, CustomResourceOptions? options = null)
            : base("mssql:index/serverRoleMember:ServerRoleMember", name, args ?? new ServerRoleMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerRoleMember(string name, Input<string> id, ServerRoleMemberState? state = null, CustomResourceOptions? options = null)
            : base("mssql:index/serverRoleMember:ServerRoleMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-mssql",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerRoleMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerRoleMember Get(string name, Input<string> id, ServerRoleMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new ServerRoleMember(name, id, state, options);
        }
    }

    public sealed class ServerRoleMemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the member. Can be retrieved using `mssql.ServerRole` or `mssql.SqlLogin`
        /// </summary>
        [Input("memberId", required: true)]
        public Input<string> MemberId { get; set; } = null!;

        /// <summary>
        /// ID of the server role. Can be retrieved using `mssql.ServerRole`
        /// </summary>
        [Input("roleId", required: true)]
        public Input<string> RoleId { get; set; } = null!;

        public ServerRoleMemberArgs()
        {
        }
        public static new ServerRoleMemberArgs Empty => new ServerRoleMemberArgs();
    }

    public sealed class ServerRoleMemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the member. Can be retrieved using `mssql.ServerRole` or `mssql.SqlLogin`
        /// </summary>
        [Input("memberId")]
        public Input<string>? MemberId { get; set; }

        /// <summary>
        /// ID of the server role. Can be retrieved using `mssql.ServerRole`
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        public ServerRoleMemberState()
        {
        }
        public static new ServerRoleMemberState Empty => new ServerRoleMemberState();
    }
}
